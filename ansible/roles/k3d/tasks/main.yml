---
- name: Ensure running on Linux
  ansible.builtin.assert:
    that: ansible_system == "Linux"
    fail_msg: "k3d install supports Linux hosts only."
  tags:
    - k3d_install

- name: Compute k3d download URL
  ansible.builtin.set_fact:
    k3d_url: "https://github.com/k3d-io/k3d/releases/download/{{ k3d_version }}/k3d-{{ k3d_os }}-{{ k3d_arch }}"
  tags:
    - k3d_install

- name: Download k3d binary
  ansible.builtin.get_url:
    url: "{{ k3d_url }}"
    dest: "{{ k3d_install_path }}"
    mode: "0755"
  tags:
    - k3d_install

- name: Verify k3d installed
  ansible.builtin.command: "{{ k3d_install_path }} version"
  register: k3d_version_out
  changed_when: false
  tags:
    - k3d_install

- name: Ensure kube config dir exists for current user
  become: false
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: "0755"
  tags:
    - k3d_cluster

- name: List existing k3d clusters (JSON)
  ansible.builtin.command: "{{ k3d_install_path }} cluster list -o json"
  register: k3d_clusters_json
  changed_when: false
  tags:
    - k3d_cluster

- name: Create k3d cluster if missing
  ansible.builtin.command: >
    {{ k3d_install_path }} cluster create {{ k3d_cluster_name }}
    --servers {{ k3d_servers }}
    --wait --timeout 120s
  register: k3d_cluster_create
  changed_when: k3d_cluster_create.rc == 0
  when: >
    (k3d_clusters_json.stdout | from_json | selectattr('name','equalto',k3d_cluster_name) | list | length) == 0
  tags:
    - k3d_cluster

- name: Show clusters
  ansible.builtin.command: "{{ k3d_install_path }} cluster list"
  changed_when: false
  tags:
    - k3d_cluster
