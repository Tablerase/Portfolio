---
# Usage after apply: kubectl -n argocd rollout restart deployment argocd-server
# https://kubernetes.io/docs/concepts/configuration/configmap/
# ArgoCD Config: https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#atomic-configuration
# ArgoCD with Ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#traefik-v30
# TODO: Verify that insecure is applied on argocd-server
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cmd-params-cm
  namespace: argocd
data:
  server.insecure: "true"
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: argocd-server
  namespace: argocd
spec:
  entryPoints:
    - websecure # Traefik HTTPS entrypoint
  routes:
    - kind: Rule
      match: Host(`argocd.localhost`)
      priority: 10
      services:
        - name: argocd-server
          port: 80 # HTTP internal traffic
    - kind: Rule
      match: Host(`argocd.localhost`) && Header(`Content-Type`, `application/grpc`)
      priority: 11
      services:
        - name: argocd-server
          port: 80
          scheme: h2c # Needed for gRPC traffic
  tls:
    certResolver: default # Traefik will handle TLS automatically
    # secretName: argocd-server-tls
---
# https://kubernetes.io/docs/concepts/services-networking/ingress/
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argocd-ingress
#   namespace: argocd
# spec:
#   ingressClassName: traefik
#   rules:
#     - host: argocd.localhost
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: argocd-server
#                 port:
#                   number: 80
# tls:
#   # https://argo-cd.readthedocs.io/en/latest/operator-manual/tls/#tls-certificates-used-by-argocd-server
#   - hosts:
#       - argocd.localhost
#     secretName: argocd-server-tls
##     secretName: traefik-default-cert
